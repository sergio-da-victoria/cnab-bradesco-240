#!/usr/bin/awk
# Autor Sérgio da Victória sergiodavictoria@hotmail.com
# Data 10-01-2019
# PADRÃO CNAB (BRADESCO) 240 RETORNO


### INICIO DO PROCESSO ###

function trimWord(word)
{
     if (length(word) > 241)
       word = substr(word, 1, 240)
       return word
}

function ltrim(word)
{
    sub(/^[ \t\r\n]+/, "", word);
    return word
}
function rtrim(word)
{
   sub(/[ \t\r\n]+$/, "", word);
   return word
}
function trim(word)
{
  return rtrim(ltrim(s));
}

function IsValid(word)
{
     if (length(word) <= 241)
         return "True";
     else
         return "False";
}


BEGIN {

    _SEGMENTO_A=0;
    _SEGMENTO_B=0;
    _SEGMENTO_C=0;
    _OK = 0;
    _ERROR = 1;

}


{

  if (NR == 1) {

      if (IsValid($0)=="False") {
          print "Header do arquivo retorno está inconsistente, excede o tamanho de 240" > "/dev/stderr"
          exit _ERROR
      }

       ### BEGIN HEADER ###
      _HEADER_CODIGO_BANCO_COMPENSACAO = substr($0,1,3);
      _HEADER_LOTE_SERVICO = substr($0,4,4);
      _HEADER_TIPO_REGISTRO = substr($0,8,1);
      _HEADER_EXCLUSIVO_CNAB = substr($0,9,9);
      _HEADER_TIPO_INSCRICAO_EMPRESA = substr($0,18,1);
      _HEADER_NUMERO_INSCRICAO_EMPRESA = substr($0,19,14);
      _HEADER_CODIGO_CONVENIO_BANCO = substr($0,33,20);
      _HEADER_AGENCIA_MANTENEDORA_CONTA = substr($0,53,5);
      _HEADER_DIGITO_VERIFICADOR_AGENCIA = substr($0,58,1);
      _HEADER_NUMERO_CONTA_CORRENTE = substr($0,59,12);
      _HEADER_DIGITO_VERIFICADOR_CONTA = substr($0,71,1);
      _HEADER_DIGITO_VERIFICADOR_AG_CONTA = substr($0,72,1);
      _HEADER_NOME_EMPRESA = substr($0,73,30);
      _HEADER_NOME_BANCO = substr($0,103,30);
      _HEADER_EXCLUSIVO_CNAB_2 = substr($0,133,10);
      _HEADER_CODIGO_REMESSA_RETORNO = substr($0,143,1);
      _HEADER_DATA_GERACAO_ARQUIVO = substr($0,144,8);
      _HEADER_HORA_GERACAO_ARQUIVO = substr($0,152,6);
      _HEADER_NUMERO_SEQUENCIAL_ARQUIVO = substr($0,158,6);
      _HEADER_NUMERO_VERSAO_LAYOUT_ARQUIVO = substr($0,164,3);
      _HEADER_DENSIDADE_GRAVACAO_ARQUIVO = substr($0,167,5);
      _HEADER_RESERVADO_BANCO = substr($0,172,20);
      _HEADER_RESERVADO_EMPRESA = substr($0,192,20);
      _HEADER_EXCLUSIVO_CNAB_3 = substr($0,212,29);
      ### END HEADER ###

  } else if (NR == 2) {

      if (IsValid($0)=="False") {
          print "Header de Lote do arquivo retorno está inconsistente, excede o tamanho de 240" > "/dev/stderr"
          exit _ERROR
      }

      ### BEGIN LOTE HEADER ###
      _HEADER_LOTECODIGO_BANCO_COMPENSACAO = substr($0,1,3);
      _HEADER_LOTELOTE_SERVICO = substr($0,4,4);
      _HEADER_LOTETIPO_REGISTRO = substr($0,8,1);
      _HEADER_LOTETIPO_OPERACAO = substr($0,9,1);
      _HEADER_LOTETIPO_SERVICO = substr($0,10,2);
      _HEADER_LOTEFORMA_LANCAMENTO = substr($0,12,2);
      _HEADER_LOTENUMERO_VERSAO_LAYOUT_LOTE = substr($0,14,3);
      _HEADER_LOTEUSO_ESCLUSIVO_CNAB = substr($0,17,1);
      _HEADER_LOTETIPO_INSCRICAO_EMPRESA = substr($0,18,1);
      _HEADER_LOTENUMERO_INSCRICAO_EMPRESA = substr($0,19,14);
      _HEADER_LOTECODIGO_CONVENIO_BANCO	= substr($0,33,20);
      _HEADER_LOTEAGENCIA_MANTENEDORA_CONTA = substr($0,53,5);
      _HEADER_LOTEDIGITO_VERIFICADOR_AGENCIA = substr($0,58,1);
      _HEADER_LOTENUMERO_CONTA_CORRENTE	= substr($0,59,12);
      _HEADER_LOTEDIGITO_VERIFICADOR_CONTA = substr($0,71,1);
      _HEADER_LOTEDIGITO_VERIFICADOR_AG_CONTA = substr($0,72,1);
      _HEADER_LOTENOME_EMPRESA = substr($0,73,30);
      _HEADER_LOTEMENSAGEM = substr($0,103,40);
      _HEADER_LOTELOGRADOURO = substr($0,143,30);
      _HEADER_LOTENUMERO_LOGRADOURO = substr($0,173,5);
      _HEADER_LOTECOMPLEMENTO = substr($0,178,15);
      _HEADER_LOTECIDADE = substr($0,193,20);
      _HEADER_LOTECEP = substr($0,213,5);
      _HEADER_LOTECOMPLEMENTO_CEP = substr($0,218,3);
      _HEADER_LOTESIGLA_ESTADO = substr($0,221,2);
      _HEADER_LOTEUSO_EXCLUSIVO_CNAB2 = substr($0,223,8);
      _HEADER_LOTECODIGO_OCORRENCIA_RETORNO = substr($0,231,10);
      ### END LOTE HEADER ###

  } else if ( ((NR > 1) && (NR > 2)) && substr($0,14,1) == "A" ) {

      if (IsValid($0)=="False") {
          print "Seguimento A do arquivo retorno está inconsistente, excede o tamanho de 240" > "/dev/stderr"
          exit _ERROR
      }

      ### BEGIN DETALHE SEGUIMENTO A ###
      _SEGMENTO_A+=1;
      _DETALHE_SEGMENTO_A_CODIGO_COMPENSACAO_BANCO[_SEGMENTO_A]=substr($0,1,3);
      _DETALHE_SEGMENTO_A_LOTE_SERVICO[_SEGMENTO_A]=substr($0,4,4);
      _DETALHE_SEGMENTO_A_TIPO_REGISTRO[_SEGMENTO_A]=substr($0,8,1);
      _DETALHE_SEGMENTO_A_NUMERO_SEQUENCIAL_REGISTRO_LOTE[_SEGMENTO_A]=substr($0,9,5);
      _DETALHE_SEGMENTO_A_CODIGO_SEGMENTO_REG_DETALHE[_SEGMENTO_A]=substr($0,14,1);
      _DETALHE_SEGMENTO_A_TIPO_MOVIMENTO[_SEGMENTO_A]=substr($0,15,1);
      _DETALHE_SEGMENTO_A_CODIGO_INSTRUCAO_MOVIMENTO[_SEGMENTO_A]=substr($0,16,2);
      _DETALHE_SEGMENTO_A_CODIGO_CAMARA_CENTRALIZADORA[_SEGMENTO_A]=substr($0,18,3);
      _DETALHE_SEGMENTO_A_CODIGO_BANCO_FAVORECIDO[_SEGMENTO_A]=substr($0,21,3);
      _DETALHE_SEGMENTO_A_AG_MANTENEDORA_CTA_FAVOR[_SEGMENTO_A]=substr($0,24,5);
      _DETALHE_SEGMENTO_A_DIGITO_VERIFICADOR_AGENCIA[_SEGMENTO_A]=substr($0,29,1);
      _DETALHE_SEGMENTO_A_NUMERO_CONTA_CORRENTE[_SEGMENTO_A]=substr($0,30,12);
      _DETALHE_SEGMENTO_A_DIGITO_VERIFICADOR_CONTA[_SEGMENTO_A]=substr($0,42,1);
      _DETALHE_SEGMENTO_A_DIGITO_VERIFICADOR_AG_CONTA[_SEGMENTO_A]=substr($0,43,1);
      _DETALHE_SEGMENTO_A_NOME_FAVORECIDO[_SEGMENTO_A]=substr($0,44,30);
      _DETALHE_SEGMENTO_A_NUMERO_DOCUMENTO_ATRIB_EMPRESA[_SEGMENTO_A]=substr($0,74,20);
      _DETALHE_SEGMENTO_A_DATA_PAGAMENTO[_SEGMENTO_A]=substr($0,94,8);
      _DETALHE_SEGMENTO_A_TIPO_MOEDA[_SEGMENTO_A]=substr($0,102,3);
      _DETALHE_SEGMENTO_A_QUANTIDADE_MOEDA[_SEGMENTO_A]=substr($0,105,15);
      _DETALHE_SEGMENTO_A_VALOR_PAGAMENTO[_SEGMENTO_A]=substr($0,120,15);
      _DETALHE_SEGMENTO_A_NUMERO_DOCUM_ATRIB_BANCO[_SEGMENTO_A]=substr($0,135,20);
      _DETALHE_SEGMENTO_A_DATA_REAL_EFETIVACAO_PGTO[_SEGMENTO_A]=substr($0,155,8);
      _DETALHE_SEGMENTO_A_VALOR_REAL_EFETIVACAO_PGTO[_SEGMENTO_A]=substr($0,163,15);
      _DETALHE_SEGMENTO_A_INFORMACOES2[_SEGMENTO_A]=substr($0,178,40);
      _DETALHE_SEGMENTO_A_COMPL_TIPO_SERVICO[_SEGMENTO_A]=substr($0,218,2);
      _DETALHE_SEGMENTO_A_CODIGO_FINALIDADE_TED[_SEGMENTO_A]=substr($0,220,5);
      _DETALHE_SEGMENTO_A_USO_EXCLUSIVO_CNAB[_SEGMENTO_A]=substr($0,225,5);
      _DETALHE_SEGMENTO_A_AVISO_FAVORECIDO[_SEGMENTO_A]=substr($0,230,1);
      _DETALHE_SEGMENTO_A_CODIGO_OCORRENCIA_RETORNO[_SEGMENTO_A]=substr($0,231,10);
      ### BEGIN DETALHE SEGUIMENTO A ###

 } else if ( ((NR > 1) && (NR > 2)) && substr($0,14,1) == "B" ) {

       if (IsValid($0)=="False") {
           print "Seguimento B do arquivo retorno está inconsistente, excede o tamanho de 240" > "/dev/stderr"
           exit _ERROR
       }


      ### BEGIN DETALHE SEGUIMENTO B ###
      _SEGMENTO_B+=1;
      _DETALHE_SEGMENTO_B_CODIGO_COMPENSACAO_BANCO[_SEGMENTO_B] = substr($0,1,3);
      _DETALHE_SEGMENTO_B_LOTE_SERVICO[_SEGMENTO_B] = substr($0,4,4);
      _DETALHE_SEGMENTO_B_TIPO_REGISTRO[_SEGMENTO_B] = substr($0,8,1);
      _DETALHE_SEGMENTO_B_NUMERO_SEQUENCIAL_REGISTRO_LOTE[_SEGMENTO_B] = substr($0,9,5);
      _DETALHE_SEGMENTO_B_CODIGO_SEGMENTO_REG_DETALHE[_SEGMENTO_B] = substr($0,14,1);
      _DETALHE_SEGMENTO_B_USO_EXCLUSIVO_CNAB[_SEGMENTO_B] = substr($0,15,3);
      _DETALHE_SEGMENTO_B_TIPO_INSCRICAO_FAVORECIDO[_SEGMENTO_B] = substr($0,18,1);
      _DETALHE_SEGMENTO_B_NUMERO_INSCRICAO_FAVORECIDO[_SEGMENTO_B] = substr($0,19,14);
      _DETALHE_SEGMENTO_B_LOGRADOURO[_SEGMENTO_B] = substr($0,33,30);
      _DETALHE_SEGMENTO_B_NUMERO_LOGRADOURO[_SEGMENTO_B] = substr($0,63,5);
      _DETALHE_SEGMENTO_B_COMPLEMENTO[_SEGMENTO_B] = substr($0,68,15);
      _DETALHE_SEGMENTO_B_BAIRRO[_SEGMENTO_B] = substr($0,83,15);
      _DETALHE_SEGMENTO_B_CIDADE[_SEGMENTO_B] = substr($0,98,20);
      _DETALHE_SEGMENTO_B_CEP[_SEGMENTO_B] = substr($0,118,5);
      _DETALHE_SEGMENTO_B_COMPLEMENTO_CEP[_SEGMENTO_B] = substr($0,123,3);
      _DETALHE_SEGMENTO_B_SIGLA_ESTADO[_SEGMENTO_B] = substr($0,126,2);
      _DETALHE_SEGMENTO_B_DATA_VENCIMENTO[_SEGMENTO_B] = substr($0,128,8);
      _DETALHE_SEGMENTO_B_VALOR_DOCUMENTO[_SEGMENTO_B] = substr($0,136,15);
      _DETALHE_SEGMENTO_B_VALOR_ABATIMENTO[_SEGMENTO_B] = substr($0,151,15);
      _DETALHE_SEGMENTO_B_VALOR_DESCONTO[_SEGMENTO_B] = substr($0,166,15);
      _DETALHE_SEGMENTO_B_VALOR_MORA[_SEGMENTO_B] = substr($0,181,15);
      _DETALHE_SEGMENTO_B_VALOR_MULTA[_SEGMENTO_B] = substr($0,196,15);
      _DETALHE_SEGMENTO_B_CODIGO_DOC_FAVORECIDO[_SEGMENTO_B] = substr($0,211,15);
      _DETALHE_SEGMENTO_B_USO_ECLUSIVO_CNAB2[_SEGMENTO_B] = substr($0,226,15);
      ### END DETALHE SEGUIMENTO B ###

  } else if ( ((NR > 1) && (NR > 2)) && substr($0,14,1) == "C") {

        if (IsValid($0)=="False") {
            print "Seguimento C do arquivo retorno está inconsistente, excede o tamanho de 240" > "/dev/stderr"
            exit _ERROR
        }


        ### BEGIN DETALHE SEGUIMENTO C ###
      _SEGMENTO_C+=1;
      _DETALHE_SEGMENTO_C_CODIGO_COMPENSACAO_BANCO[_SEGMENTO_C] =  substr($0,1,3);
      _DETALHE_SEGMENTO_C_LOTE_SERVICO[_SEGMENTO_C] =  substr($0,4,4);
      _DETALHE_SEGMENTO_C_TIPO_REGISTRO[_SEGMENTO_C]	= substr($0,8,1);
      _DETALHE_SEGMENTO_C_NUMERO_SEQUENCIAL_REGISTRO_LOTE[_SEGMENTO_C] =  substr($0,9,5);
      _DETALHE_SEGMENTO_C_CODIGO_SEGMENTO_REG_DETALHE[_SEGMENTO_C]	= substr($0,14,1);
      _DETALHE_SEGMENTO_C_USO_EXCLUSIVO_CNAB[_SEGMENTO_C] =  substr($0,15,3);
      _DETALHE_SEGMENTO_C_VALOR_IR[_SEGMENTO_C]	= substr($0,18,15);
      _DETALHE_SEGMENTO_C_VALOR_ISS[_SEGMENTO_C]	= substr($0,33,15);
      _DETALHE_SEGMENTO_C_VALOR_IOF[_SEGMENTO_C]	= substr($0,48,15);
      _DETALHE_SEGMENTO_C_VALOR_OUTRAS_DEDUCOES[_SEGMENTO_C] =  substr($0,63,15);
      _DETALHE_SEGMENTO_C_VALOR_OUTROS_ACRESCIMOS[_SEGMENTO_C]	= substr($0,78,15);
      _DETALHE_SEGMENTO_C_AGENCIA_FAVORECIDO[_SEGMENTO_C]	= substr($0,93,5);
      _DETALHE_SEGMENTO_C_DIGITO_VERIFICADOR_AGENCIA[_SEGMENTO_C] =  substr($0,98,1);
      _DETALHE_SEGMENTO_C_NUMERO_CONTA_CORRENTE[_SEGMENTO_C]	= substr($0,99,1);
      _DETALHE_SEGMENTO_C_DIGITO_VERIFICADOR_CONTA[_SEGMENTO_C] =  substr($0,111,1);
      _DETALHE_SEGMENTO_C_DIGITO_VERIFICADOR_AG_CONTA[_SEGMENTO_C]	= substr($0,112,1);
      _DETALHE_SEGMENTO_C_VALOR_INSS[_SEGMENTO_C] =  substr($0,113,12);
      _DETALHE_SEGMENTO_C_USO_EXCLUSIVO_CNAB2[_SEGMENTO_C]	= substr($0,128,113);
       ### END DETALHE SEGUIMENTO C ###

  } else if ( ((NR > 1) && (NR > 2)) && substr($0,8,1) == "5") {

        if (IsValid($0)=="False") {
            print "Trailler de Lote do arquivo retorno está inconsistente, excede o tamanho de 240" > "/dev/stderr"
            exit _ERROR
        }

       ### BEGIN LOTE TRAILHER ###
      _LOTE_TRAILHER_CODIGO_COMPENSACAO_BANCO	= substr($0,1,3);
      _LOTE_TRAILHER_LOTE_SERVICO				= substr($0,4,4);
      _LOTE_TRAILHER_TIPO_REGISTRO				= substr($0,8,1);
      _LOTE_TRAILHER_USO_EXCLUSIVO_CNAB 		= substr($0,9,9);
      _LOTE_TRAILHER_QUANTIDADE_REGISTROS_LOTE	= substr($0,18,6);
      _LOTE_TRAILHER_SOMATORIA_VALORES			= substr($0,24,18);
      _LOTE_TRAILHER_SOMATORIA_QUANTIDADE_MOEDAS= substr($0,42,18);
      _LOTE_TRAILHER_NUMERO_AVISO_DEBITO		= substr($0,60,6);
      _LOTE_TRAILHER_USO_EXCLUSIVO_CNAB2		= substr($0,66,165);
      _LOTE_TRAILHER_CODIGO_OCORRENCIA_RETORNO	= substr($0,231,10);
      ### END LOTE TRAILHER ###

  } else if ( ((NR > 1) && (NR > 2)) && substr($0,8,1) == "9") {

        if (IsValid($0)=="False") {
            print "Trailler do arquivo retorno está inconsistente, excede o tamanho de 240" > "/dev/stderr"
            exit _ERROR
        }


       ### BEGIN TRAILHER ###
      _TRAILHER_CODIGO_COMPENSACAO_BANCO = substr($0,1,3);
      _TRAILHER_LOTE_SERVICO			= substr($0,4,4);
      _TRAILHER_TIPO_REGISTRO			= substr($0,8,1);
      _TRAILHER_USO_EXCLUSIVO_CNAB 	= substr($0,9,9);
      _TRAILHER_QUANTIDADE_LOTES_ARQUIVO = substr($0,18,6);
      _TRAILHER_QUANTIDADE_REGISTROS_ARQUIVO	= substr($0,24,6);
      _TRAILHER_QUANTIDADE_CONTAS_LOTE	= substr($0,30,6);
      _TRAILHER_USO_EXCLUSIVO_CNAB2	= substr($0,36,205);
      ### END TRAILHER ###

  }


}


END {


  ### HEADER ###
  printf("%-3s%-4s%-1s%-9s%-1s%-14s%-20s%-5s%-1s%-12s%-1s%-1s%-30s%-30s%-10s%-1s%-8s%-6s%-6s%-3s%-5s%-20s%-20s%-29s\n",_HEADER_CODIGO_BANCO_COMPENSACAO,_HEADER_LOTE_SERVICO,_HEADER_TIPO_REGISTRO,_HEADER_EXCLUSIVO_CNAB,_HEADER_TIPO_INSCRICAO_EMPRESA,_HEADER_NUMERO_INSCRICAO_EMPRESA,
  _HEADER_CODIGO_CONVENIO_BANCO,_HEADER_AGENCIA_MANTENEDORA_CONTA,_HEADER_DIGITO_VERIFICADOR_AGENCIA,_HEADER_NUMERO_CONTA_CORRENTE,_HEADER_DIGITO_VERIFICADOR_CONTA,_HEADER_DIGITO_VERIFICADOR_AG_CONTA, _HEADER_NOME_EMPRESA,_HEADER_NOME_BANCO,_HEADER_EXCLUSIVO_CNAB_2,_HEADER_CODIGO_REMESSA_RETORNO,
  _HEADER_DATA_GERACAO_ARQUIVO,_HEADER_HORA_GERACAO_ARQUIVO,_HEADER_NUMERO_SEQUENCIAL_ARQUIVO,_HEADER_NUMERO_VERSAO_LAYOUT_ARQUIVO, _HEADER_DENSIDADE_GRAVACAO_ARQUIVO,_HEADER_RESERVADO_BANCO,_HEADER_RESERVADO_EMPRESA,_HEADER_EXCLUSIVO_CNAB_3);

  ### CRIANDO STRING PARA INSERT DO HEADER ####
  _FORMAT_INSERT_HADER = sprintf("'%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s'",_HEADER_CODIGO_BANCO_COMPENSACAO,_HEADER_LOTE_SERVICO,_HEADER_TIPO_REGISTRO,_HEADER_EXCLUSIVO_CNAB,_HEADER_TIPO_INSCRICAO_EMPRESA,_HEADER_NUMERO_INSCRICAO_EMPRESA,
  _HEADER_CODIGO_CONVENIO_BANCO,_HEADER_AGENCIA_MANTENEDORA_CONTA,_HEADER_DIGITO_VERIFICADOR_AGENCIA,_HEADER_NUMERO_CONTA_CORRENTE,_HEADER_DIGITO_VERIFICADOR_CONTA,_HEADER_DIGITO_VERIFICADOR_AG_CONTA,_HEADER_NOME_EMPRESA,_HEADER_NOME_BANCO,_HEADER_EXCLUSIVO_CNAB_2,_HEADER_CODIGO_REMESSA_RETORNO,
  _HEADER_DATA_GERACAO_ARQUIVO,_HEADER_HORA_GERACAO_ARQUIVO,_HEADER_NUMERO_SEQUENCIAL_ARQUIVO,_HEADER_NUMERO_VERSAO_LAYOUT_ARQUIVO,_HEADER_DENSIDADE_GRAVACAO_ARQUIVO,_HEADER_RESERVADO_BANCO,_HEADER_RESEVADO_EMPRESA,_HEADER_EXCLUSIVO_CNAB_3);


  ### HEADER LOTE ###
  printf("%-3s%-4s%-1s%-1s%-2s%-2s%-3s%-1s%-1s%-14s%-20s%-5s%-1s%-12s%-1s%-1s%-30s%-40s%-30s%-5s%-15s%-20s%-5s%-3s%-2s%-8s%-10s\n",_HEADER_LOTECODIGO_BANCO_COMPENSACAO,_HEADER_LOTELOTE_SERVICO,_HEADER_LOTETIPO_REGISTRO,_HEADER_LOTETIPO_OPERACAO,_HEADER_LOTETIPO_SERVICO,_HEADER_LOTEFORMA_LANCAMENTO,
  _HEADER_LOTENUMERO_VERSAO_LAYOUT_LOTE,_HEADER_LOTEUSO_ESCLUSIVO_CNAB,_HEADER_LOTETIPO_INSCRICAO_EMPRESA,_HEADER_LOTENUMERO_INSCRICAO_EMPRESA,_HEADER_LOTECODIGO_CONVENIO_BANCO,
  _HEADER_LOTEAGENCIA_MANTENEDORA_CONTA,_HEADER_LOTEDIGITO_VERIFICADOR_AGENCIA,_HEADER_LOTENUMERO_CONTA_CORRENTE,_HEADER_LOTEDIGITO_VERIFICADOR_CONTA,_HEADER_LOTEDIGITO_VERIFICADOR_AG_CONTA,
  _HEADER_LOTENOME_EMPRESA,_HEADER_LOTEMENSAGEM,_HEADER_LOTELOGRADOURO,_HEADER_LOTENUMERO_LOGRADOURO,_HEADER_LOTECOMPLEMENTO,_HEADER_LOTECIDADE,_HEADER_LOTECEP,_HEADER_LOTECOMPLEMENTO_CEP,
  _HEADER_LOTESIGLA_ESTADO,_HEADER_LOTEUSO_EXCLUSIVO_CNAB2,_HEADER_LOTECODIGO_OCORRENCIA_RETORNO);

   ### SEGUIMENTO A ###
   # if (_SEGMENTO_A!=0) {
   # for (SEG_A = 1; SEG_A<=_SEGMENTO_A; SEG_A++) {
   #  printf("%-3s%-4s%-1s%-5s%-1s%-1s%-2s%-3s%-3s%-5s%-1s%-12s%-1s%-1s%-30s%-20s%-8s%-3s%-15s%-15s%-20s%-8s%-15s%-40s%-2s%-5s%-5s%-1s%-10s\n",_DETALHE_SEGMENTO_A_CODIGO_COMPENSACAO_BANCO[SEG_A],_DETALHE_SEGMENTO_A_LOTE_SERVICO[SEG_A],_DETALHE_SEGMENTO_A_TIPO_REGISTRO[SEG_A],_DETALHE_SEGMENTO_A_NUMERO_SEQUENCIAL_REGISTRO_LOTE[SEG_A],
   #          _DETALHE_SEGMENTO_A_CODIGO_SEGMENTO_REG_DETALHE[SEG_A],_DETALHE_SEGMENTO_A_TIPO_MOVIMENTO[SEG_A],_DETALHE_SEGMENTO_A_CODIGO_INSTRUCAO_MOVIMENTO[SEG_A],_DETALHE_SEGMENTO_A_CODIGO_CAMARA_CENTRALIZADORA[SEG_A],
   #          _DETALHE_SEGMENTO_A_CODIGO_BANCO_FAVORECIDO[SEG_A],_DETALHE_SEGMENTO_A_AG_MANTENEDORA_CTA_FAVOR[SEG_A],_DETALHE_SEGMENTO_A_DIGITO_VERIFICADOR_AGENCIA[SEG_A],_DETALHE_SEGMENTO_A_NUMERO_CONTA_CORRENTE	[SEG_A],
   #          _DETALHE_SEGMENTO_A_DIGITO_VERIFICADOR_CONTA[SEG_A],_DETALHE_SEGMENTO_A_DIGITO_VERIFICADOR_AG_CONTA[SEG_A],_DETALHE_SEGMENTO_A_NOME_FAVORECIDO[SEG_A],_DETALHE_SEGMENTO_A_NUMERO_DOCUMENTO_ATRIB_EMPRESA[SEG_A],
   #          _DETALHE_SEGMENTO_A_DATA_PAGAMENTO[SEG_A],_DETALHE_SEGMENTO_A_TIPO_MOEDA[SEG_A],_DETALHE_SEGMENTO_A_QUANTIDADE_MOEDA[SEG_A],_DETALHE_SEGMENTO_A_VALOR_PAGAMENTO[SEG_A],_DETALHE_SEGMENTO_A_NUMERO_DOCUM_ATRIB_BANCO[SEG_A],
   #           _DETALHE_SEGMENTO_A_DATA_REAL_EFETIVACAO_PGTO[SEG_A],_DETALHE_SEGMENTO_A_VALOR_REAL_EFETIVACAO_PGTO[SEG_A],_DETALHE_SEGMENTO_A_INFORMACOES2[SEG_A],_DETALHE_SEGMENTO_A_COMPL_TIPO_SERVICO[SEG_A],
   #          _DETALHE_SEGMENTO_A_CODIGO_FINALIDADE_TED[SEG_A],_DETALHE_SEGMENTO_A_USO_EXCLUSIVO_CNAB[SEG_A],_DETALHE_SEGMENTO_A_AVISO_FAVORECIDO[SEG_A],_DETALHE_SEGMENTO_A_CODIGO_OCORRENCIA_RETORNO[SEG_A]);
   #      }
   # }

   ### SEGUIMENTO B ###
   #if (_SEGMENTO_B!=0) {
   #   for (SEG_B = 1; SEG_B<=_SEGMENTO_B; SEG_B++) {
   #     printf("%-3s%-4s%-1s%-5s%-1s%-3s%-1s%-14s%-30s%-5s%-15s%-15s%-20s%-5s%-3s%-2s%-8s%-15s%-15s%-15s%-15s%-15s%-15s%-15s\n",_DETALHE_SEGMENTO_B_CODIGO_COMPENSACAO_BANCO[SEG_B],_DETALHE_SEGMENTO_B_LOTE_SERVICO[SEG_B],_DETALHE_SEGMENTO_B_TIPO_REGISTRO[SEG_B],_DETALHE_SEGMENTO_B_NUMERO_SEQUENCIAL_REGISTRO_LOTE[SEG_B],
   #       _DETALHE_SEGMENTO_B_CODIGO_SEGMENTO_REG_DETALHE[SEG_B],_DETALHE_SEGMENTO_B_USO_EXCLUSIVO_CNAB[SEG_B],_DETALHE_SEGMENTO_B_TIPO_INSCRICAO_FAVORECIDO[SEG_B],_DETALHE_SEGMENTO_B_NUMERO_INSCRICAO_FAVORECIDO[SEG_B],
   #       _DETALHE_SEGMENTO_B_LOGRADOURO[SEG_B],_DETALHE_SEGMENTO_B_NUMERO_LOGRADOURO[SEG_B],_DETALHE_SEGMENTO_B_COMPLEMENTO[SEG_B],_DETALHE_SEGMENTO_B_BAIRRO[SEG_B],_DETALHE_SEGMENTO_B_CIDADE[SEG_B],_DETALHE_SEGMENTO_B_CEP[SEG_B],
   #     _DETALHE_SEGMENTO_B_COMPLEMENTO_CEP[SEG_B],_DETALHE_SEGMENTO_B_SIGLA_ESTADO[SEG_B],_DETALHE_SEGMENTO_B_DATA_VENCIMENTO[SEG_B],_DETALHE_SEGMENTO_B_VALOR_DOCUMENTO[SEG_B],_DETALHE_SEGMENTO_B_VALOR_ABATIMENTO[SEG_B],
   #       _DETALHE_SEGMENTO_B_VALOR_DESCONTO[SEG_B],_DETALHE_SEGMENTO_B_VALOR_MORA[SEG_B],_DETALHE_SEGMENTO_B_VALOR_MULTA[SEG_B],_DETALHE_SEGMENTO_B_CODIGO_DOC_FAVORECIDO[SEG_B],_DETALHE_SEGMENTO_B_USO_ECLUSIVO_CNAB2[SEG_B]);
   #   }
   # }

   ### SEGUIMENTO C ###
   #if (_SEGMENTO_C!=0) {
   #   for (SEG_C = 1; SEG_A<=_SEGMENTO_C; SEG_C++) {
   #       printf("%-3s%-4s%-1s%-5s%-1s%-3s%-15s%-15s%-15s%-15s%-15s%-5s%-1s%-1s%-1s%-1s%-12s%-113s\n",_DETALHE_SEGMENTO_C_CODIGO_COMPENSACAO_BANCO[SEG_C],_DETALHE_SEGMENTO_C_LOTE_SERVICO[SEG_C],_DETALHE_SEGMENTO_C_TIPO_REGISTRO[SEG_C],_DETALHE_SEGMENTO_C_NUMERO_SEQUENCIAL_REGISTRO_LOTE[SEG_C],
   #       _DETALHE_SEGMENTO_C_CODIGO_SEGMENTO_REG_DETALHE[SEG_C],_DETALHE_SEGMENTO_C_USO_EXCLUSIVO_CNAB[SEG_C],_DETALHE_SEGMENTO_C_VALOR_IR[SEG_C],_DETALHE_SEGMENTO_C_VALOR_ISS[SEG_C],
   #       _DETALHE_SEGMENTO_C_VALOR_IOF[SEG_C],_DETALHE_SEGMENTO_C_VALOR_OUTRAS_DEDUCOES[SEG_C],_DETALHE_SEGMENTO_C_VALOR_OUTROS_ACRESCIMOS[SEG_C],_DETALHE_SEGMENTO_C_AGENCIA_FAVORECIDO[SEG_C], _DETALHE_SEGMENTO_C_DIGITO_VERIFICADOR_AGENCIA[SEG_C],_DETALHE_SEGMENTO_C_NUMERO_CONTA_CORRENTE[SEG_C],_DETALHE_SEGMENTO_C_DIGITO_VERIFICADOR_CONTA[SEG_C],_DETALHE_SEGMENTO_C_DIGITO_VERIFICADOR_AG_CONTA[SEG_C],
   #       _DETALHE_SEGMENTO_C_VALOR_INSS[SEG_C],_DETALHE_SEGMENTO_C_USO_EXCLUSIVO_CNAB2[SEG_C]);
   #   }
   # }


    ### AQUI JOIN NECESSITO DO SEGUIMENTO A COM O SEGUIMENTO B, NESTE CASO NÃO PRECISO DO SEGUIMENTO C (OPICIONAL) ###
     if (_SEGMENTO_A!=0) {

         for (SEG_A = 1; SEG_A<=_SEGMENTO_A; SEG_A++) {
             printf("%-3s%-4s%-1s%-5s%-1s%-1s%-2s%-3s%-3s%-5s%-1s%-12s%-1s%-1s%-30s%-20s%-8s%-3s%-15s%-15s%-20s%-8s%-15s%-40s%-2s%-5s%-5s%-1s%-10s\n",_DETALHE_SEGMENTO_A_CODIGO_COMPENSACAO_BANCO[SEG_A],_DETALHE_SEGMENTO_A_LOTE_SERVICO[SEG_A],_DETALHE_SEGMENTO_A_TIPO_REGISTRO[SEG_A],_DETALHE_SEGMENTO_A_NUMERO_SEQUENCIAL_REGISTRO_LOTE[SEG_A],
                   _DETALHE_SEGMENTO_A_CODIGO_SEGMENTO_REG_DETALHE[SEG_A],_DETALHE_SEGMENTO_A_TIPO_MOVIMENTO[SEG_A],_DETALHE_SEGMENTO_A_CODIGO_INSTRUCAO_MOVIMENTO[SEG_A],_DETALHE_SEGMENTO_A_CODIGO_CAMARA_CENTRALIZADORA[SEG_A],
                   _DETALHE_SEGMENTO_A_CODIGO_BANCO_FAVORECIDO[SEG_A],_DETALHE_SEGMENTO_A_AG_MANTENEDORA_CTA_FAVOR[SEG_A],_DETALHE_SEGMENTO_A_DIGITO_VERIFICADOR_AGENCIA[SEG_A],_DETALHE_SEGMENTO_A_NUMERO_CONTA_CORRENTE[SEG_A],
                   _DETALHE_SEGMENTO_A_DIGITO_VERIFICADOR_CONTA[SEG_A],_DETALHE_SEGMENTO_A_DIGITO_VERIFICADOR_AG_CONTA[SEG_A],_DETALHE_SEGMENTO_A_NOME_FAVORECIDO[SEG_A],_DETALHE_SEGMENTO_A_NUMERO_DOCUMENTO_ATRIB_EMPRESA[SEG_A],
                   _DETALHE_SEGMENTO_A_DATA_PAGAMENTO[SEG_A],_DETALHE_SEGMENTO_A_TIPO_MOEDA[SEG_A],_DETALHE_SEGMENTO_A_QUANTIDADE_MOEDA[SEG_A],_DETALHE_SEGMENTO_A_VALOR_PAGAMENTO[SEG_A],_DETALHE_SEGMENTO_A_NUMERO_DOCUM_ATRIB_BANCO[SEG_A],
                   _DETALHE_SEGMENTO_A_DATA_REAL_EFETIVACAO_PGTO[SEG_A],_DETALHE_SEGMENTO_A_VALOR_REAL_EFETIVACAO_PGTO[SEG_A],_DETALHE_SEGMENTO_A_INFORMACOES2[SEG_A],_DETALHE_SEGMENTO_A_COMPL_TIPO_SERVICO[SEG_A],
                   _DETALHE_SEGMENTO_A_CODIGO_FINALIDADE_TED[SEG_A],_DETALHE_SEGMENTO_A_USO_EXCLUSIVO_CNAB[SEG_A],_DETALHE_SEGMENTO_A_AVISO_FAVORECIDO[SEG_A],_DETALHE_SEGMENTO_A_CODIGO_OCORRENCIA_RETORNO[SEG_A]);

             SEG_B=SEG_A;

             printf("%-3s%-4s%-1s%-5s%-1s%-3s%-1s%-14s%-30s%-5s%-15s%-15s%-20s%-5s%-3s%-2s%-8s%-15s%-15s%-15s%-15s%-15s%-15s%-15s\n",_DETALHE_SEGMENTO_B_CODIGO_COMPENSACAO_BANCO[SEG_B],_DETALHE_SEGMENTO_B_LOTE_SERVICO[SEG_B],_DETALHE_SEGMENTO_B_TIPO_REGISTRO[SEG_B],_DETALHE_SEGMENTO_B_NUMERO_SEQUENCIAL_REGISTRO_LOTE[SEG_B],
                  _DETALHE_SEGMENTO_B_CODIGO_SEGMENTO_REG_DETALHE[SEG_B],_DETALHE_SEGMENTO_B_USO_EXCLUSIVO_CNAB[SEG_B],_DETALHE_SEGMENTO_B_TIPO_INSCRICAO_FAVORECIDO[SEG_B],_DETALHE_SEGMENTO_B_NUMERO_INSCRICAO_FAVORECIDO[SEG_B],
                  _DETALHE_SEGMENTO_B_LOGRADOURO[SEG_B],_DETALHE_SEGMENTO_B_NUMERO_LOGRADOURO[SEG_B],_DETALHE_SEGMENTO_B_COMPLEMENTO[SEG_B],_DETALHE_SEGMENTO_B_BAIRRO[SEG_B],_DETALHE_SEGMENTO_B_CIDADE[SEG_B],_DETALHE_SEGMENTO_B_CEP[SEG_B],
                  _DETALHE_SEGMENTO_B_COMPLEMENTO_CEP[SEG_B],_DETALHE_SEGMENTO_B_SIGLA_ESTADO[SEG_B],_DETALHE_SEGMENTO_B_DATA_VENCIMENTO[SEG_B],_DETALHE_SEGMENTO_B_VALOR_DOCUMENTO[SEG_B],_DETALHE_SEGMENTO_B_VALOR_ABATIMENTO[SEG_B],
                  _DETALHE_SEGMENTO_B_VALOR_DESCONTO[SEG_B],_DETALHE_SEGMENTO_B_VALOR_MORA[SEG_B],_DETALHE_SEGMENTO_B_VALOR_MULTA[SEG_B],_DETALHE_SEGMENTO_B_CODIGO_DOC_FAVORECIDO[SEG_B],_DETALHE_SEGMENTO_B_USO_ECLUSIVO_CNAB2[SEG_B]);

         }


     }

     ### TRAILLER LOTE ###
      printf("%-3s%-4s%-1s%-9s%-6s%-18s%-18s%-6s%-165s%-10s\n",_LOTE_TRAILHER_CODIGO_COMPENSACAO_BANCO,_LOTE_TRAILHER_LOTE_SERVICO,_LOTE_TRAILHER_TIPO_REGISTRO,_LOTE_TRAILHER_USO_EXCLUSIVO_CNAB,_LOTE_TRAILHER_QUANTIDADE_REGISTROS_LOTE,
             _LOTE_TRAILHER_SOMATORIA_VALORES,_LOTE_TRAILHER_SOMATORIA_QUANTIDADE_MOEDAS,_LOTE_TRAILHER_NUMERO_AVISO_DEBITO,_LOTE_TRAILHER_USO_EXCLUSIVO_CNAB2,_LOTE_TRAILHER_CODIGO_OCORRENCIA_RETORNO);


     ### TRAILLER ###
      printf("%-3s%-4s%-1s%-9s%-6s%-6s%-6s%-205s\n",_TRAILHER_CODIGO_COMPENSACAO_BANCO,_TRAILHER_LOTE_SERVICO,_TRAILHER_TIPO_REGISTRO,_TRAILHER_USO_EXCLUSIVO_CNAB,_TRAILHER_QUANTIDADE_LOTES_ARQUIVO,
            _TRAILHER_QUANTIDADE_REGISTROS_ARQUIVO,_TRAILHER_QUANTIDADE_CONTAS_LOTE,_TRAILHER_USO_EXCLUSIVO_CNAB2);


INSERT_HADER="\"INSERT INTO cnab.HEADER(_HEADER_CODIGO_BANCO_COMPENSACAO,_HEADER_LOTE_SERVICO,_HEADER_TIPO_REGISTRO,_HEADER_EXCLUSIVO_CNAB,_HEADER_TIPO_INSCRICAO_EMPRESA,_HEADER_NUMERO_INSCRICAO_EMPRESA,_HEADER_CODIGO_CONVENIO_BANCO,_HEADER_AGENCIA_MANTENEDORA_CONTA,_HEADER_DIGITO_VERIFICADOR_AGENCIA,_HEADER_NUMERO_CONTA_CORRENTE,_HEADER_DIGITO_VERIFICADOR_CONTA,_HEADER_DIGITO_VERIFICADOR_AG_CONTA,_HEADER_NOME_EMPRESA,_HEADER_NOME_BANCO,_HEADER_EXCLUSIVO_CNAB_2,_HEADER_CODIGO_REMESSA_RETORNO,_HEADER_DATA_GERACAO_ARQUIVO,_HEADER_HORA_GERACAO_ARQUIVO,_HEADER_NUMERO_SEQUENCIAL_ARQUIVO,_HEADER_NUMERO_VERSAO_LAYOUT_ARQUIVO,_HEADER_DENSIDADE_GRAVACAO_ARQUIVO,_HEADER_RESERVADO_BANCO,_HEADER_RESERVADO_EMPRESA,_HEADER_EXCLUSIVO_CNAB_3)  VALUES ( "_FORMAT_INSERT_HADER" )\"";


 system("mysql -ucnab -pcnab12345 cnab -e "INSERT_HADER);



}
